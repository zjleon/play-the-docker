version: "2"

services:
  nginx:
    restart: always
    build:
      context: ../
      dockerfile: configs/docker.prod.nginx
    image: asia.gcr.io/pwc-mwc-app/nginx:prod
    ports:
      - "80:3000"
    links:
      - phone
      - tv
      - backend
    environment:
      - GET_HOSTS_FROM=dns
    depends_on:
      - phone
      - tv
      - backend
    labels:
      kompose.service.type: loadbalancer
  phone:
    restart: always
    build:
      context: ../
      dockerfile: configs/docker.prod.web_static
      args:
        - PROJECT=phone
    image: asia.gcr.io/pwc-mwc-app/phone:prod
    ports:
      - "8080"
    environment:
      # the env(like link to other service) will be manage in project level(.env),
      # expect NODE_ENV are managed in docker file,
      # and DOCKER_ENV for link between client and microservices
      - DOCKER_ENV=1
      - NODE_ENV=production
      - GET_HOSTS_FROM=dns
    links:
      - backend
    # command: env
  tv:
    restart: always
    build:
      context: ../
      dockerfile: configs/docker.prod.web_static
      args:
        - PROJECT=tv
    image: asia.gcr.io/pwc-mwc-app/tv:prod
    ports:
      - "8081"
    links:
      - backend
    environment:
      # the env(like link to other service) will be manage in project level(.env),
      # expect NODE_ENV are managed in docker file,
      # and DOCKER_ENV for link between client and microservices
      - DOCKER_ENV=1
      - NODE_ENV=production
      - GET_HOSTS_FROM=dns
    # command: env
  backend:
    restart: always
    ports:
      - "8070"
    build:
      context: ../
      dockerfile: configs/docker.prod.web_static
      args:
        - PROJECT=backend
    environment:
      - GET_HOSTS_FROM=dns
    image: asia.gcr.io/pwc-mwc-app/backend:prod
    # command: env
