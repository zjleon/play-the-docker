FROM ubuntu:15.10

# install basic packages:
RUN dpkg --add-architecture i386 && \
    apt-get update && \
    apt-get install -y --force-yes --no-install-recommends \
      expect \
      # android sdk esential:
      libncurses5:i386 libstdc++6:i386 zlib1g:i386 \
      # libncurses5:i386 libstdc++6:i386 zlib1g:i386 libc6:i386 libbz2-1.0:i386 \
      # usb capibility
      usbutils \
      unzip \
      openjdk-8-jdk \
      build-essential

# #############Installation start################
# fix open jdk ssl issue:
# http://stackoverflow.com/questions/6784463/error-trustanchors-parameter-must-be-non-empty
RUN ["/var/lib/dpkg/info/ca-certificates-java.postinst", "configure"]

# install maven dependencies downloader
WORKDIR /opt
ARG MAVEN_VERSION=3.3.9
COPY ./resources/apache-maven-${MAVEN_VERSION}-bin.tar.gz ./apache-maven-${MAVEN_VERSION}-bin.tar.gz
RUN tar xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    rm -f apache-maven-${MAVEN_VERSION}-bin.tar.gz
ENV PATH ${PATH}:/opt/apache-maven-${MAVEN_VERSION}/bin

# install gradle
WORKDIR /usr/bin
ARG GRADLE_VERSION=3.2
COPY ./resources/gradle-${GRADLE_VERSION}-bin.zip ./gradle-${GRADLE_VERSION}-bin.zip
RUN unzip -o -qq gradle-${GRADLE_VERSION}-bin.zip && \
  ln -s gradle-${GRADLE_VERSION} gradle && \
  rm gradle-${GRADLE_VERSION}-bin.zip
ENV GRADLE_HOME="/usr/bin/gradle"
ENV PATH $PATH:$GRADLE_HOME/bin
# enable gradle deamon for faster build
ENV GRADLE_OPTS="-Dorg.gradle.daemon=true"

# install android sdk
WORKDIR /opt
ARG ANDROID_SDK_VERSION=r24.4.1
COPY ./resources/android-sdk_${ANDROID_SDK_VERSION}-linux.tgz ./android-sdk_${ANDROID_SDK_VERSION}-linux.tgz
RUN tar xzf android-sdk_${ANDROID_SDK_VERSION}-linux.tgz && \
    rm -f android-sdk_${ANDROID_SDK_VERSION}-linux.tgz
ENV ANDROID_HOME /opt/android-sdk-linux
ENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

COPY ./scripts/android.dev.agree_to_install_dependencies.sh ./agree.sh
RUN ["chmod", "+x", "agree.sh"]
# copy android sdk licenses
COPY ./configs/android-sdk-license ${ANDROID_HOME}/licenses/android-sdk-license
COPY ./configs/android-sdk-preview-license ${ANDROID_HOME}/licenses/android-sdk-preview-license
# android update sdk --filter tools,platform-tools,android-23,build-tools-23.0.3,extra-android-support,extra-android-m2repository,extra-google-m2repository --no-ui --force -a
# RUN ["./agree.sh", "android update sdk --filter tools,platform-tools,android-23,build-tools-23.0.3,extra-android-support,extra-android-m2repository,extra-google-m2repository --no-ui --force -a"]
# install android packages
RUN ls $ANDROID_HOME/ -a
COPY ./resources/android-packages /tmp
RUN cd /tmp \
    && unzip -qq -o platform-tools_r25-linux.zip -d ${ANDROID_HOME} \
    && unzip -qq -o tools_r25.2.2-linux.zip -d ${ANDROID_HOME} \
    && unzip -qq -o platform-23_r03.zip -d ${ANDROID_HOME}/platforms \
    && mv $ANDROID_HOME/platforms/android-6.0 $ANDROID_HOME/platforms/android-23 \
    && unzip -qq -o build-tools_r23.0.3-linux.zip -d ${ANDROID_HOME}/build-tools \
    && mv $ANDROID_HOME/build-tools/android-6.0 $ANDROID_HOME/build-tools/23.0.3 \
    && mkdir -p ${ANDROID_HOME}/extras/android ${ANDROID_HOME}/extras/google \
    && unzip -qq -o support_r23.2.1.zip -d ${ANDROID_HOME}/extras/android \
    # && unzip -qq -o android_m2repository_r40.zip -d ${ANDROID_HOME}/extras/android \
    # && unzip -qq -o google_m2repository_gms_v7_rc28_wear_2a3.zip -d ${ANDROID_HOME}/extras/google \
    && rm -r ./*
# keep repository update,
# save git lfs space,
# let android make ~/.android folder
RUN ["./agree.sh", "android update sdk --filter extra-android-m2repository,extra-google-m2repository --no-ui --force -a"]

# install node
ENV NODE_VERSION=6.9.1
COPY ./resources/node-v${NODE_VERSION}-linux-x64.tar.xz ./node.tar.xz
RUN tar xJf node.tar.xz --directory /opt && \
    rm -f node.tar.xz
ENV PATH ${PATH}:/opt/node-v${NODE_VERSION}-linux-x64/bin

# install tini
COPY ./resources/tini /tini
RUN chmod +x /tini

# #################Configuration start################
# set java environment variables
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/jre

# config adb connection
COPY ./configs/51-android.rules /etc/udev/rules.d/51-android.rules
EXPOSE 5037

# pre-install all project dependencies, via pom.xml
WORKDIR /tmp
COPY ./configs/maven.dev.settings.xml /root/.m2/settings.xml
COPY ./configs/maven.dev.android_dependencies.xml ./pom.xml
# RUN mvn dependency:go-offline
RUN ["mvn", "dependency:resolve", "-Dclassifier=sources"]

WORKDIR /node_packages
COPY ./src/android/package.json ./package.json
RUN ["npm", "install", "--quiet"]

# do some clean up
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/* \
    # /tmp/* \
    /var/tmp/* \
    # /opt/apache-maven-${MAVEN_VERSION} \
    /opt/agree.sh

WORKDIR /app
COPY ./scripts/android.dev.initial.sh /tmp/initial.sh
RUN ["chmod", "+x", "/tmp/initial.sh"]
ENTRYPOINT ["/tini", "--"]
CMD ["/tmp/initial.sh"]
