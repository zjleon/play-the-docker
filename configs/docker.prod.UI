FROM ubuntu:15.10

RUN apt-get update && \
    apt-get install -y --force-yes --no-install-recommends \
    ssh \
    git \
    python \
    pkg-config \
    libcairo2-dev \
    libjpeg-dev \
    libgif-dev \
    build-essential \
    curl \
    xz-utils

# install node
WORKDIR /opt
ENV NODE_VERSION=8.11.1
COPY ./resources/node-v${NODE_VERSION}-linux-x64.tar.xz ./node.tar.xz
RUN tar xJf node.tar.xz --directory /opt && \
    rm -f node.tar.xz
ENV PATH ${PATH}:/opt/node-v${NODE_VERSION}-linux-x64/bin
# node-gyp build require node header, and doing this can get it from offline
RUN curl -o /opt/node-v${NODE_VERSION}-headers.tar.gz -k https://nodejs.org/download/release/v${NODE_VERSION}/node-v${NODE_VERSION}-headers.tar.gz
ENV npm_config_nodedir=/opt/node-v${NODE_VERSION}-linux-x64/
ENV npm_config_tarball=/opt/node-v${NODE_VERSION}-headers.tar.gz

# install yarn
COPY ./resources/yarn-v1.6.0.tar.gz ./yarn.tar.gz
RUN mkdir yarn && \
    tar zxf yarn.tar.gz --directory /opt/yarn --strip-components=1 &&  \
    rm -f yarn.tar.gz
ENV PATH ${PATH}:/opt/yarn/bin

# install tini
COPY ./resources/tini /tini
RUN chmod +x /tini

# define variables
ARG PROJECT=web_static

# add ssh key before yarn install
# RUN mkdir /root/.ssh/
# ADD ./configs/id_rsa /root/.ssh/id_rsa
# RUN touch /root/.ssh/known_hosts && \
#     ssh-keyscan bitbucket.org >> /root/.ssh/known_hosts && \
#     ssh-keyscan github.com >> ~/.ssh/known_hosts && \
#     echo "Host github.com\n\tUser git\n" >> /root/.ssh/config

# cache the project dependencies
WORKDIR /node_resources
COPY ./src/${PROJECT}/package.json ./package.json
COPY ./src/${PROJECT}/.yarnrc ./.yarnrc
RUN yarn install && \
    rm -frd /node_resources

WORKDIR /app
COPY ./src/${PROJECT} .

EXPOSE 8070
EXPOSE 8080
EXPOSE 8081

# execute initialize script
ENTRYPOINT ["/tini", "--"]
# initial.sh will be mounted to client disk
CMD ["/bin/bash", "./initial.sh"]
